openapi: 3.0.1
paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: registar un nuevo usuario en la base de datos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyRegisterPost'
        required: true
      
      responses:
        '201':
          description: El usuario se registro correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodyRegisterPost'
        
          
        '200':
          description : Existe un usuario creado con el email enviado.
          content:
            application/json:
              schema:
                
                type: object
                properties:
                  mgs:
                    type: string
                    description: mensaje de respuesta.
                    example: There is a user with that email!
        '500':
          description : Ocurrio un error en el servidor.
          content:
            application/json:
              schema:
              
                type: object
                properties:
                  mgs:
                    type: string
                    description: mensaje de respuesta.
                    example: An unexpected error occurred
                  
        
        
  /auth/login:
    post:
      tags: [Auth]
      summary: logear al usuario.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyLoginPost'
        required: true
      
      responses:
        
        '200':
          description : Se logea correctamente y recibe el token de acceso
          content:
            application/json:
              schema:
                
                type: object
                properties:
                  token:
                    type: string
                    description: token de acceso.
                    example: 7WK5T79u5mIzjIXXi2oI9Fglmgivv7RAJ7izyj9tUyQ
        '401':
          description : Fallo al autenticar, credenciales incorrectas.
          content:
            application/json:
              schema:
              
                type: object
                properties:
                  mgs:
                    type: string
                    description: mensaje de respuesta de error.
                    example:  Authentication failed! Email / password does not correct.
                  
        
      
  /auth/me:
    get:
      tags: [Auth]
      summary: Enviar al usuario su informacion personal.
      security:
        - bearerAuth: [] 
      
      responses:
        
        '200':
          description : Recibe los datos personales solicitados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
        '500':
          description : Ocurrio un error en el servidor.
          content:
            application/json:
              schema:
              
                type: object
                properties:
                  mgs:
                    type: string
                    description: mensaje de respuesta de error.
                    example : An unexpected error occurred
                  
        
      
        

components:
  securitySchemes:
    bearerAuth:      
      type: http
      scheme: bearer
  
  schemas:
    BodyRegisterPost:
      type: object
      properties:
        firstName:
          type: string
          description: Primer nombre del Usuario
          example: Gonzalo
        lastName:
          type: string
          description: Apellido del Usuario
          example: Fleitas
        email:
          type: string
          description: Email del Usuario
          example: psi.gonzalo.fleitas@gmail.com
        password:
          type: string
          description: contraseña del Usuario
          example: °°°°°°°°
    BodyLoginPost:
      type: object
      properties:
        
        email:
          type: string
          description: Email del Usuario
          example: psi.gonzalo.fleitas@gmail.com
        password:
          type: string
          description: contraseña del Usuario
          example: °°°°°°°°
    
    UserData:
      type: object
      properties:
        firstName:
          type: string
          description: Primer nombre del Usuario
          example: Gonzalo
        lastName:
          type: string
          description: Apellido del Usuario
          example: Fleitas
        email:
          type: string
          description: Email del Usuario
          example: psi.gonzalo.fleitas@gmail.com
                 