paths:
 /categories:
    post:
      tags: [categories]
      summary: Create a new category
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Categories'
        '400':
          description: Bad request
        '401':
          description: Unauthorized to perform this action
        '403':
          description: Token is not valid
        '500':
          description: Unexpected error occurred

    get: 
      tags: [categories]
      summary: Get all categories
      security:
          - bearerAuth: []
      responses: 
        '200': 
          description: Return all the categories
          content:
            application/json:
              schema:
              type: array
              $ref: '#/components/schemas/Categories'
        '400': 
          description: Bad request
        '401':
          description: Unauthorized to perform this action
        '403':
          description: Token is not valid
        '500':
          description: Unexpected error occurred

    /categories/{id}:
      get:
        tags: [categories]
        summary: Get a category by its id
        security:
            -bearerAuth: []
        parameters:
          - name: id
            in: path
            description: Category id
            required: true
            schema:
              type: string
        responses:
        '200':
          description: Return the requested category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        '400':
          description: Bad request
        '401':
          description: Unauthorized to perform this action
        '403':
          description: Token is not valid
        '404':
          description: Category not found
        '500':
          description: Unexpected error occurred

      put:
        tags:
              - categories
        summary: Update category data
        security:
              - bearerAuth: []
        parameters:
              - name: id
                in: path
                description: Category id to update
                required: true
        requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Categories'
                responses:
        '200':
          description: Category updated successfully
          content: 
              application/json:
                schema:
                  $ref: '#/components/schemas/Categories'
        '400': 
          description: Bad request
        '401':
          description: Unauthorized to perform this action
        '403':
          description: Token is not valid
        '404':
          description: Category not found
        '500':
            description: Unexpected error occurred
      delete:
        tags: 
             [categories]
        summary: Delete a category by its id
        security: 
                - bearerAuth: []
        parameters:
                - name: id
                  in: path
                  description: Category id to update
                  required: true
                  schema:
                    type: string
        responses:
         '200':
            description: Category deleted successfully
            content: 
              application/json:
                schema:
                  $ref: '#/components/schemas/Categories'
         '400':
          description: Bad request
          401':
           description: Unauthorized to perform this action
         '403':
          description: Token is not valid
         '404':
          description: Category not found
         '500':
          description: Unexpected error occurred

components:
  securitySchemes:
    bearerAuth:
        type: http
        scheme: bearer
  schemas:
    Categories:
      type: object
    required: 
      - name
    properties:
      name:
        type: string
      image: 
        type: string
      description:
        type: string

